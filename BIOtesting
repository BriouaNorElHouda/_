{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30822,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import spacy\nimport pdfplumber\n\nmodel = spacy.load('fr_core_news_md')\n\nfinwords = [\"Chiffre d’affaires net\", \"Free cash\", \"Résultat opérationnel\", \"Résultat net core\", \"BPA core\"]\n\nwith pdfplumber.open(\"/kaggle/input/pdfsds/PDFs/q4-2021-media-release-fr.pdf\") as pdf:\n    text = \"\"\n    for page in pdf.pages:\n        text += page.extract_text()\n\ndoc = model(text)\n\nfor ent in doc.ents:\n    if ent.label_ == \"MISC\" and any(finword.lower() in ent.text.lower() for finword in finwords):\n        print(f\"Entity: {ent.text}, Label: {ent.label_}\")\n","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"!python -m spacy download fr_core_news_md","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-27T14:42:11.989326Z","iopub.execute_input":"2024-12-27T14:42:11.989745Z","iopub.status.idle":"2024-12-27T14:42:25.024129Z","shell.execute_reply.started":"2024-12-27T14:42:11.989715Z","shell.execute_reply":"2024-12-27T14:42:25.022692Z"}},"outputs":[{"name":"stdout","text":"Collecting fr-core-news-md==3.7.0\n  Downloading https://github.com/explosion/spacy-models/releases/download/fr_core_news_md-3.7.0/fr_core_news_md-3.7.0-py3-none-any.whl (45.8 MB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m45.8/45.8 MB\u001b[0m \u001b[31m29.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hRequirement already satisfied: spacy<3.8.0,>=3.7.0 in /usr/local/lib/python3.10/dist-packages (from fr-core-news-md==3.7.0) (3.7.6)\nRequirement already satisfied: spacy-legacy<3.1.0,>=3.0.11 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (3.0.12)\nRequirement already satisfied: spacy-loggers<2.0.0,>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (1.0.5)\nRequirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (1.0.10)\nRequirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (2.0.8)\nRequirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (3.0.9)\nRequirement already satisfied: thinc<8.3.0,>=8.2.2 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (8.2.5)\nRequirement already satisfied: wasabi<1.2.0,>=0.9.1 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (1.1.3)\nRequirement already satisfied: srsly<3.0.0,>=2.4.3 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (2.4.8)\nRequirement already satisfied: catalogue<2.1.0,>=2.0.6 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (2.0.10)\nRequirement already satisfied: weasel<0.5.0,>=0.1.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (0.4.1)\nRequirement already satisfied: typer<1.0.0,>=0.3.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (0.12.5)\nRequirement already satisfied: tqdm<5.0.0,>=4.38.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (4.66.5)\nRequirement already satisfied: requests<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (2.32.3)\nRequirement already satisfied: pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (2.9.2)\nRequirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (3.1.4)\nRequirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (71.0.4)\nRequirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (24.1)\nRequirement already satisfied: langcodes<4.0.0,>=3.2.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (3.4.0)\nRequirement already satisfied: numpy>=1.19.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (1.26.4)\nRequirement already satisfied: language-data>=1.2 in /usr/local/lib/python3.10/dist-packages (from langcodes<4.0.0,>=3.2.0->spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (1.2.0)\nRequirement already satisfied: annotated-types>=0.6.0 in /usr/local/lib/python3.10/dist-packages (from pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4->spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (0.7.0)\nRequirement already satisfied: pydantic-core==2.23.4 in /usr/local/lib/python3.10/dist-packages (from pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4->spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (2.23.4)\nRequirement already satisfied: typing-extensions>=4.6.1 in /usr/local/lib/python3.10/dist-packages (from pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4->spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (4.12.2)\nRequirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (3.3.2)\nRequirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (3.10)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (2.2.3)\nRequirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (2024.8.30)\nRequirement already satisfied: blis<0.8.0,>=0.7.8 in /usr/local/lib/python3.10/dist-packages (from thinc<8.3.0,>=8.2.2->spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (0.7.11)\nRequirement already satisfied: confection<1.0.0,>=0.0.1 in /usr/local/lib/python3.10/dist-packages (from thinc<8.3.0,>=8.2.2->spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (0.1.5)\nRequirement already satisfied: click>=8.0.0 in /usr/local/lib/python3.10/dist-packages (from typer<1.0.0,>=0.3.0->spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (8.1.7)\nRequirement already satisfied: shellingham>=1.3.0 in /usr/local/lib/python3.10/dist-packages (from typer<1.0.0,>=0.3.0->spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (1.5.4)\nRequirement already satisfied: rich>=10.11.0 in /usr/local/lib/python3.10/dist-packages (from typer<1.0.0,>=0.3.0->spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (13.8.1)\nRequirement already satisfied: cloudpathlib<1.0.0,>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from weasel<0.5.0,>=0.1.0->spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (0.19.0)\nRequirement already satisfied: smart-open<8.0.0,>=5.2.1 in /usr/local/lib/python3.10/dist-packages (from weasel<0.5.0,>=0.1.0->spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (7.0.4)\nRequirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (2.1.5)\nRequirement already satisfied: marisa-trie>=0.7.7 in /usr/local/lib/python3.10/dist-packages (from language-data>=1.2->langcodes<4.0.0,>=3.2.0->spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (1.2.0)\nRequirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from rich>=10.11.0->typer<1.0.0,>=0.3.0->spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (3.0.0)\nRequirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from rich>=10.11.0->typer<1.0.0,>=0.3.0->spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (2.18.0)\nRequirement already satisfied: wrapt in /usr/local/lib/python3.10/dist-packages (from smart-open<8.0.0,>=5.2.1->weasel<0.5.0,>=0.1.0->spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (1.16.0)\nRequirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py>=2.2.0->rich>=10.11.0->typer<1.0.0,>=0.3.0->spacy<3.8.0,>=3.7.0->fr-core-news-md==3.7.0) (0.1.2)\nInstalling collected packages: fr-core-news-md\nSuccessfully installed fr-core-news-md-3.7.0\n\u001b[38;5;2m✔ Download and installation successful\u001b[0m\nYou can now load the package via spacy.load('fr_core_news_md')\n\u001b[38;5;3m⚠ Restart to reload dependencies\u001b[0m\nIf you are in a Jupyter or Colab notebook, you may need to restart Python in\norder to load all the package's dependencies. You can do this by selecting the\n'Restart kernel' or 'Restart runtime' option.\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"import spacy\n\n# Load the French language model for sentence segmentation\nnlp = spacy.load(\"fr_core_news_md\")\n\n# Your financial terms mapping (for BIO tagging)\nfinancial_terms = {\n    \"dette nette\": \"NetDebt\",\n    \"résultat opérationnel\": \"OperatingProfit\",\n    \"actifs financiers\": \"FinancialAssets\",\n    \"passifs courants\": \"CurrentLiabilities\"\n}\n\n# Function to tag entities in the text using BIO tagging\ndef preprocess_bio_tagging(text):\n    # Step 1: Split the text into sentences using spaCy\n    doc = nlp(text)\n    sentences = [sent.text.strip() for sent in doc.sents]  # List of sentences\n\n    # Step 2: Process each sentence for BIO tagging\n    tagged_sentences = []\n    \n    for sentence in sentences:\n        # Split the sentence into tokens (words)\n        tokens = sentence.split()\n        tags = [\"O\"] * len(tokens)  # Default tag is \"O\" (Outside)\n        \n        # Step 3: Identify financial terms in the tokens and apply BIO tagging\n        for term, tag in financial_terms.items():\n            term_tokens = term.split()\n            if ' '.join(tokens).find(term) != -1:  # Check if term is in the sentence\n                # Find the starting index of the term in the sentence\n                start_idx = tokens.index(term_tokens[0])\n                \n                # Assign BIO tags\n                tags[start_idx] = f\"B-{tag}\"\n                for i in range(1, len(term_tokens)):\n                    tags[start_idx + i] = f\"I-{tag}\"\n        \n        # Append the tokens and their corresponding BIO tags to the result\n        tagged_sentence = list(zip(tokens, tags))\n        tagged_sentences.append(tagged_sentence)\n\n    return tagged_sentences\n\n\n\npdf_text = \"La dette nette a augmenté de 5 millions d'euros. Le résultat opérationnel a grimpé à USD 2,6 milliards (+45%, +51% tcc), grâce principalement à une diminution des pertes de valeur et des charges pour litiges ainsi qu’au produit de créances éventuelles. \"\n\ntagged_data = preprocess_bio_tagging(pdf_text)\n\n# Print the tagged data\nfor sentence in tagged_data:\n    print(sentence)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-27T13:32:16.998713Z","iopub.execute_input":"2024-12-27T13:32:16.999130Z","iopub.status.idle":"2024-12-27T13:32:19.866659Z","shell.execute_reply.started":"2024-12-27T13:32:16.999104Z","shell.execute_reply":"2024-12-27T13:32:19.865391Z"}},"outputs":[{"name":"stdout","text":"[('La', 'O'), ('dette', 'B-NetDebt'), ('nette', 'I-NetDebt'), ('a', 'O'), ('augmenté', 'O'), ('de', 'O'), ('5', 'O'), ('millions', 'O'), (\"d'euros.\", 'O')]\n[('Le', 'O'), ('résultat', 'B-OperatingProfit'), ('opérationnel', 'I-OperatingProfit'), ('a', 'O'), ('grimpé', 'O'), ('à', 'O'), ('USD', 'O'), ('2,6', 'O'), ('milliards', 'O'), ('(+45%,', 'O'), ('+51%', 'O'), ('tcc),', 'O'), ('grâce', 'O'), ('principalement', 'O'), ('à', 'O'), ('une', 'O'), ('diminution', 'O'), ('des', 'O'), ('pertes', 'O'), ('de', 'O'), ('valeur', 'O'), ('et', 'O'), ('des', 'O'), ('charges', 'O'), ('pour', 'O'), ('litiges', 'O'), ('ainsi', 'O'), ('qu’au', 'O'), ('produit', 'O'), ('de', 'O'), ('créances', 'O'), ('éventuelles.', 'O')]\n","output_type":"stream"}],"execution_count":6},{"cell_type":"code","source":"\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-30T07:47:11.294244Z","iopub.execute_input":"2024-12-30T07:47:11.294622Z","iopub.status.idle":"2024-12-30T07:47:15.267365Z","shell.execute_reply.started":"2024-12-30T07:47:11.294591Z","shell.execute_reply":"2024-12-30T07:47:15.265890Z"}},"outputs":[{"name":"stdout","text":"Requirement already satisfied: datasets in /usr/local/lib/python3.10/dist-packages (3.2.0)\nRequirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from datasets) (3.16.1)\nRequirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from datasets) (1.26.4)\nRequirement already satisfied: pyarrow>=15.0.0 in /usr/local/lib/python3.10/dist-packages (from datasets) (18.1.0)\nRequirement already satisfied: dill<0.3.9,>=0.3.0 in /usr/local/lib/python3.10/dist-packages (from datasets) (0.3.8)\nRequirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from datasets) (2.1.4)\nRequirement already satisfied: requests>=2.32.2 in /usr/local/lib/python3.10/dist-packages (from datasets) (2.32.3)\nRequirement already satisfied: tqdm>=4.66.3 in /usr/local/lib/python3.10/dist-packages (from datasets) (4.66.5)\nRequirement already satisfied: xxhash in /usr/local/lib/python3.10/dist-packages (from datasets) (3.5.0)\nRequirement already satisfied: multiprocess<0.70.17 in /usr/local/lib/python3.10/dist-packages (from datasets) (0.70.16)\nRequirement already satisfied: fsspec<=2024.9.0,>=2023.1.0 in /usr/local/lib/python3.10/dist-packages (from fsspec[http]<=2024.9.0,>=2023.1.0->datasets) (2024.6.1)\nRequirement already satisfied: aiohttp in /usr/local/lib/python3.10/dist-packages (from datasets) (3.10.5)\nRequirement already satisfied: huggingface-hub>=0.23.0 in /usr/local/lib/python3.10/dist-packages (from datasets) (0.24.7)\nRequirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from datasets) (24.1)\nRequirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from datasets) (6.0.2)\nRequirement already satisfied: aiohappyeyeballs>=2.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (2.4.0)\nRequirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (1.3.1)\nRequirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (24.2.0)\nRequirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (1.4.1)\nRequirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (6.1.0)\nRequirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (1.11.1)\nRequirement already satisfied: async-timeout<5.0,>=4.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (4.0.3)\nRequirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub>=0.23.0->datasets) (4.12.2)\nRequirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.32.2->datasets) (3.3.2)\nRequirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.32.2->datasets) (3.10)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.32.2->datasets) (2.2.3)\nRequirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.32.2->datasets) (2024.8.30)\nRequirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas->datasets) (2.8.2)\nRequirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas->datasets) (2024.2)\nRequirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas->datasets) (2024.1)\nRequirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas->datasets) (1.16.0)\nNote: you may need to restart the kernel to use updated packages.\n","output_type":"stream"}],"execution_count":4},{"cell_type":"code","source":"import torch\nfrom transformers import CamembertTokenizer\n\n# Load CamemBERT tokenizer\ntokenizer = CamembertTokenizer.from_pretrained(\"camembert-base\")\n\n# Example JSON data\ntagged_data = [\n    {\"sentence\": \"Le résultat opérationnel a augmenté de 5 millions d'euros.\",\n     \"tokens\": [\"Le\", \"résultat\", \"opérationnel\", \"a\", \"augmenté\", \"de\", \"5\", \"millions\", \"d'\", \"euros\", \".\"],\n     \"tags\": [\"O\", \"B-OperatingProfit\", \"I-OperatingProfit\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\"]\n    }\n]\n\n# Label mapping for BIO tags\nlabel_map = {\"O\": 0, \"B-OperatingProfit\": 1, \"I-OperatingProfit\": 2, \"B-NetDebt\": 3, \"I-NetDebt\": 4}\n\n# Function to prepare data for training\ndef prepare_data_for_finetuning(tagged_data):\n    inputs = []\n    labels = []\n    attention_masks = []\n    \n    for sentence_data in tagged_data:\n        sentence = sentence_data[\"sentence\"]\n        tokens = sentence_data[\"tokens\"]\n        tags = sentence_data[\"tags\"]\n        \n        # Tokenize the sentence with CamemBERT tokenizer\n        encoding = tokenizer(sentence, truncation=True, padding='max_length', max_length=128, return_tensors=\"pt\")\n        \n        input_ids = encoding[\"input_ids\"].squeeze(0)  # Get input ids for the tokens\n        attention_mask = encoding[\"attention_mask\"].squeeze(0)  # Get attention mask\n        \n        # Map BIO tags to integer labels, aligned with the tokenized tokens\n        label_ids = []\n        for token, tag in zip(tokens, tags):\n            # Add the corresponding label for each token (subword tokens will get the same label)\n            label_ids.append(label_map.get(tag, 0))\n        \n        # Padding the label_ids to match the input length\n        padding_length = input_ids.size(0) - len(label_ids)\n        label_ids.extend([0] * padding_length)  # Padding with 'O' label (0)\n\n        # Add the processed data to the lists\n        inputs.append(input_ids)\n        labels.append(torch.tensor(label_ids))\n        attention_masks.append(attention_mask)\n    \n    # Return tensors for model training\n    return torch.stack(inputs), torch.stack(labels), torch.stack(attention_masks)\n\n# Prepare the data for fine-tuning\ninput_ids, label_ids, attention_masks = prepare_data_for_finetuning(tagged_data)\n\n# Example of how to print the processed data\nprint(f\"Input IDs: {input_ids}\")\nprint(f\"Label IDs: {label_ids}\")\nprint(f\"Attention Masks: {attention_masks}\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-30T07:47:19.943882Z","iopub.execute_input":"2024-12-30T07:47:19.944288Z","iopub.status.idle":"2024-12-30T07:47:20.311303Z","shell.execute_reply.started":"2024-12-30T07:47:19.944254Z","shell.execute_reply":"2024-12-30T07:47:20.310170Z"},"_kg_hide-input":true},"outputs":[{"name":"stdout","text":"Input IDs: tensor([[   5,   54, 1206, 9870,   33, 6834,    8,  205,  713,   18,   11, 1958,\n            9,    6,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n            1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n            1,    1,    1,    1,    1,    1,    1,    1]])\nLabel IDs: tensor([[0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0]])\nAttention Masks: tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0]])\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}